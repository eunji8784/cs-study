1. MySQL의 경우, 기본키를 설정하지 않아도 테이블이 만들어집니다. 어떻게 이게 가능한 걸까요?  
   MySQL의 InnoDB는 기본적으로 데이터를 저장하고 Indexing하기 위해 기본키를 요구합니다. 명시적인 PK가 없는 경우 사용자에게는 노출되지 않는다 하더라도 InnoDB는 그 값을 직접 생성합니다.  

3. NoSQL에서 조인이 가능한가요?  
   대부분의 NoSQL에서는 조인연산을 지원하지 않습니다. 따라서 조인을 하고 싶은 경우에는 하나의 객체안에 데이터를 복제하여 중첩하여 저장하여 조인과 같이 사용할 수 있습니다.  
---
1. 정규화에는 어떤 장점이 있고 어떤 단점이 있는지 아는대로 설명해주세요.  
   장점
   1. 데이터베이스 변경 시 이상현상이 발생하는 문제점을 해결할 수 있다.
   2. 데이터베이스 구조 확장 시 정규화된 데이터베이스는 그 구조를 변경하지 않아도 되거나 일부만 변경해도 된다.
   단점
   릴레이션의 분해로 인해 릴레이션 간의 연산(JOIN 연산)이 많아진다. 이로인해 질의에 대한 응답 시간이 느려질 수 있다.

2. NoSQL을 어떤 경우에 사용하는지 말해보세요
   1. 가격이 상대적으로 저렴한 수평적 확장이 가능하기 때문에 데이터의 양이 매우 많은 경우에 사용
   2. 스키마가 유연하기 때문에 정확한 데이터 구조를 알 수 없거나 변경, 확장이 이루어지는 경우 사용  
---
1. 정규화가 무조건 좋은가요? 그렇지 않다면, 어떤 상황에서 역정규화를 하는게 좋은지 설명해 주세요.      
    무조건 좋지는 않습니다.  
    여러 테이블에 걸친 데이터를 조회하려고 하는 경우, 여러 테이블을 조인하게 되어 조회 성능이 떨어질 수 있어 이 경우 적당히 역정규화를 통해 중복을 허용하는 것이 좋습니다.  
    
2. NoSQL과 RDB을 비교해서 설명해보세요.  
    RDB는 엄격한 스키마를 따르고, 테이블과 관계로 데이터를 구조화합니다. 데이터 중복이 없어서 데이터 **update 가 잦은 시스템에서 유리합니다.**  
    NoSQL은 유연한 데이터 구조를 가져 수평적 확장이 용이한 대신, 중복 데이터가 많기 때문에 데이터 update 시 모든 컬렉션에서 수정이 필요합니다. 따라서 Update가 자주 이루어지지 않는 경우 사용해야 합니다.  
